2017/09/15 16:52:40 [INFO] Terraform version: 0.10.4  
2017/09/15 16:52:40 [INFO] Go runtime version: go1.9
2017/09/15 16:52:40 [INFO] CLI args: []string{"/usr/local/Cellar/terraform/0.10.4/bin/terraform", "destroy"}
2017/09/15 16:52:40 [DEBUG] Attempting to open CLI config file: /Users/mmumtaz/.terraformrc
2017/09/15 16:52:40 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2017/09/15 16:52:40 [INFO] CLI command args: []string{"destroy"}
2017/09/15 16:52:40 [INFO] command: empty terraform config, returning nil
2017/09/15 16:52:40 [DEBUG] command: no data state file found for backend config
2017/09/15 16:52:40 [DEBUG] New state was assigned lineage "0448f542-d42e-4e88-ae6b-639b755e2d8c"
2017/09/15 16:52:40 [INFO] command: backend initialized: <nil>
2017/09/15 16:52:40 [DEBUG] checking for provider in "."
2017/09/15 16:52:40 [WARNING] found legacy provider "terraform-provider-agility"
2017/09/15 16:52:40 [DEBUG] checking for provider in "/usr/local/Cellar/terraform/0.10.4/bin"
2017/09/15 16:52:40 [WARNING] found legacy provider "terraform-provider-agility"
2017/09/15 16:52:40 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2017/09/15 16:52:40 [DEBUG] checking for provider in "/Users/mmumtaz/.terraform.d/plugins"
2017/09/15 16:52:40 [DEBUG] checking for provider in "/Users/mmumtaz/.terraform.d/plugins/darwin_amd64"
2017/09/15 16:52:40 [DEBUG] found valid plugin: "agility"
2017/09/15 16:52:40 [DEBUG] checking for provisioner in "."
2017/09/15 16:52:40 [DEBUG] checking for provisioner in "/usr/local/Cellar/terraform/0.10.4/bin"
2017/09/15 16:52:40 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2017/09/15 16:52:40 [DEBUG] checking for provisioner in "/Users/mmumtaz/.terraform.d/plugins"
2017/09/15 16:52:40 [DEBUG] checking for provisioner in "/Users/mmumtaz/.terraform.d/plugins/darwin_amd64"
2017/09/15 16:52:40 [INFO] command: backend <nil> is not enhanced, wrapping in local
2017/09/15 16:52:40 [INFO] backend/local: starting Apply operation
2017/09/15 16:52:40 [TRACE] Preserving existing state lineage "e0f7333c-b0b3-4951-ad65-18f44faa6a00"
2017/09/15 16:52:40 [TRACE] Preserving existing state lineage "e0f7333c-b0b3-4951-ad65-18f44faa6a00"
2017/09/15 16:52:40 [DEBUG] command: asking for input: "var.agility_password"
2017/09/15 16:52:53 [DEBUG] command: asking for input: "var.agility_userid"
2017/09/15 16:52:54 [INFO] terraform: building graph: GraphTypeInput
2017/09/15 16:52:54 [TRACE] ConfigTransformer: Starting for path: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ConfigTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.LocalTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.OutputTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:52:54 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
2017/09/15 16:52:54 [DEBUG] Attaching resource state to "agility_compute.serv": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420322820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachStateTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootVariableTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.MissingProviderTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ProviderTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.DisableProviderTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ParentProviderTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Attach provider request: []string{} agility
2017/09/15 16:52:54 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"agility", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc420312420)}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "provider.agility" references: [var.agility_userid var.agility_password]
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "agility_compute.serv" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "var.agility_userid" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "var.agility_password" references: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ReferenceTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TargetsTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.CloseProviderTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.agility (close) - *terraform.graphNodeCloseProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

agility_compute.serv - *terraform.NodeAbstractResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeAbstractResource
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeAbstractResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.agility (close) - *terraform.graphNodeCloseProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [DEBUG] Starting graph walk: walkInput
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "root"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "var.agility_userid"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "var.agility_password"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "provider.agility"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "provider.agility (close)"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility" waiting on "var.agility_password"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility (close)" waiting on "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "agility_compute.serv" waiting on "provider.agility"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility" waiting on "var.agility_userid"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "root" waiting on "provider.agility (close)"
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "provider.agility (close)", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "agility_compute.serv", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "provider.agility", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: walking "var.agility_userid"
2017/09/15 16:52:54 [TRACE] vertex 'root.var.agility_userid': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "var.agility_password"
2017/09/15 16:52:54 [TRACE] vertex 'root.var.agility_password': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "provider.agility"
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility': evaluating
2017/09/15 16:52:54 [TRACE] [walkInput] Entering eval tree: provider.agility
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInitProvider
2017-09-15T16:52:54.654+0530 [DEBUG] plugin: starting plugin: path=/usr/local/Cellar/go/1.9/libexec/src/github.com/csc/csc-agility-terraform-provider-plug-in/terraform-provider-agility args=[/usr/local/Cellar/go/1.9/libexec/src/github.com/csc/csc-agility-terraform-provider-plug-in/terraform-provider-agility]
2017-09-15T16:52:54.662+0530 [DEBUG] plugin: waiting for RPC address: path=/usr/local/Cellar/go/1.9/libexec/src/github.com/csc/csc-agility-terraform-provider-plug-in/terraform-provider-agility
2017-09-15T16:52:54.678+0530 [DEBUG] plugin.terraform-provider-agility: plugin address: timestamp=2017-09-15T16:52:54.677+0530 address=/var/folders/1x/14hqd18x3zb_b588xlmlcmc00000gp/T/plugin675447978 network=unix
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalGetProvider
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInputProvider
2017/09/15 16:52:54 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:52:54 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:52:54 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:52:54 [TRACE] [walkInput] Exiting eval tree: provider.agility
2017/09/15 16:52:54 [TRACE] dag/walk: walking "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "provider.agility (close)"
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility (close)': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility (close)': evaluating
2017/09/15 16:52:54 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/15 16:52:54 [TRACE] [walkInput] Entering eval tree: provider.agility (close)
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/09/15 16:52:54 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/15 16:52:54 [TRACE] [walkInput] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/15 16:52:54 [TRACE] [walkInput] Exiting eval tree: provider.agility (close)
2017/09/15 16:52:54 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "agility_compute.serv.0", replace "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] [walkInput] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/15 16:52:54 [TRACE] dag/walk: walking "root"
2017/09/15 16:52:54 [TRACE] vertex 'root.root': walking
2017/09/15 16:52:54 [INFO] terraform: building graph: GraphTypeValidate
2017/09/15 16:52:54 [TRACE] ConfigTransformer: Starting for path: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ConfigTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.LocalTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.OutputTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:52:54 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
2017/09/15 16:52:54 [DEBUG] Attaching resource state to "agility_compute.serv": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420322820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachStateTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootVariableTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.MissingProviderTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ProviderTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.DisableProviderTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ParentProviderTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Attach provider request: []string{} agility
2017/09/15 16:52:54 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"agility", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc420312420)}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.graphTransformerMulti:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "provider.agility" references: [var.agility_userid var.agility_password]
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "agility_compute.serv" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "var.agility_userid" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "var.agility_password" references: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ReferenceTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TargetsTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.CloseProviderTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.agility (close) - *terraform.graphNodeCloseProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

agility_compute.serv - *terraform.NodeValidatableResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv - *terraform.NodeValidatableResource
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.agility (close) - *terraform.graphNodeCloseProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [DEBUG] Starting graph walk: walkValidate
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "var.agility_userid"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "var.agility_password"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "provider.agility"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "provider.agility (close)"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "root"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility (close)" waiting on "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "root" waiting on "provider.agility (close)"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "agility_compute.serv" waiting on "provider.agility"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility" waiting on "var.agility_userid"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility" waiting on "var.agility_password"
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "agility_compute.serv", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "provider.agility", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "provider.agility (close)", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: walking "var.agility_userid"
2017/09/15 16:52:54 [TRACE] vertex 'root.var.agility_userid': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "var.agility_password"
2017/09/15 16:52:54 [TRACE] vertex 'root.var.agility_password': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "provider.agility"
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility': evaluating
2017/09/15 16:52:54 [TRACE] [walkValidate] Entering eval tree: provider.agility
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInitProvider
2017/09/15 16:52:54 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalGetProvider
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalValidateProvider
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/09/15 16:52:54 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:52:54 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:52:54 [TRACE] [walkValidate] Exiting eval tree: provider.agility
2017/09/15 16:52:54 [TRACE] dag/walk: walking "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': evaluating
2017/09/15 16:52:54 [TRACE] [walkValidate] Entering eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalIf
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalValidateCount
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/15 16:52:54 [TRACE] [walkValidate] Exiting eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': expanding/walking dynamic subgraph
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ResourceCountTransformer:

agility_compute.serv - *terraform.NodeValidatableResourceInstance
2017/09/15 16:52:54 [DEBUG] Attaching resource state to "agility_compute.serv": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420322820), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachStateTransformer:

agility_compute.serv - *terraform.NodeValidatableResourceInstance
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TargetsTransformer:

agility_compute.serv - *terraform.NodeValidatableResourceInstance
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "agility_compute.serv" references: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ReferenceTransformer:

agility_compute.serv - *terraform.NodeValidatableResourceInstance
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootTransformer:

agility_compute.serv - *terraform.NodeValidatableResourceInstance
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: walking "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': evaluating
2017/09/15 16:52:54 [TRACE] [walkValidate] Entering eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalValidateResourceSelfRef
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalGetProvider
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalValidateResource
2017/09/15 16:52:54 [TRACE] [walkValidate] Exiting eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] dag/walk: walking "provider.agility (close)"
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility (close)': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "meta.count-boundary (count boundary fixup)"
2017/09/15 16:52:54 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility (close)': evaluating
2017/09/15 16:52:54 [TRACE] [walkValidate] Entering eval tree: provider.agility (close)
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/09/15 16:52:54 [TRACE] [walkValidate] Exiting eval tree: provider.agility (close)
2017/09/15 16:52:54 [TRACE] vertex 'root.meta.count-boundary (count boundary fixup)': evaluating
2017/09/15 16:52:54 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (count boundary fixup)
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2017/09/15 16:52:54 [TRACE] EvalCountFixZeroOneBoundaryGlobal: count 1, search "agility_compute.serv.0", replace "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (count boundary fixup)
2017/09/15 16:52:54 [TRACE] dag/walk: walking "root"
2017/09/15 16:52:54 [TRACE] vertex 'root.root': walking
2017/09/15 16:52:54 [INFO] backend/local: apply calling Refresh
2017/09/15 16:52:54 [INFO] terraform: building graph: GraphTypeRefresh
2017/09/15 16:52:54 [TRACE] ConfigTransformer: Starting for path: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ConfigTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
2017/09/15 16:52:54 [TRACE] ConfigTransformer: Starting for path: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ConfigTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.OrphanResourceTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
2017/09/15 16:52:54 [DEBUG] Attaching resource state to "agility_compute.serv": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4200790e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachStateTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:52:54 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootVariableTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.MissingProviderTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ProviderTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.DisableProviderTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ParentProviderTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Attach provider request: []string{} agility
2017/09/15 16:52:54 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"agility", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc420312420)}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.LocalTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.OutputTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "provider.agility" references: [var.agility_password var.agility_userid]
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "agility_compute.serv" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "var.agility_userid" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "var.agility_password" references: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ReferenceTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TargetsTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.CloseProviderTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv - *terraform.NodeRefreshableManagedResource
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:52:54 [DEBUG] Starting graph walk: walkRefresh
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "var.agility_password"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "provider.agility"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "provider.agility (close)"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "var.agility_userid"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "agility_compute.serv" waiting on "provider.agility"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility" waiting on "var.agility_password"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility" waiting on "var.agility_userid"
2017/09/15 16:52:54 [TRACE] dag/walk: added edge: "provider.agility (close)" waiting on "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "agility_compute.serv", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "provider.agility", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: dependencies changed for "provider.agility (close)", sending new deps
2017/09/15 16:52:54 [TRACE] dag/walk: walking "var.agility_password"
2017/09/15 16:52:54 [TRACE] vertex 'root.var.agility_password': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "var.agility_userid"
2017/09/15 16:52:54 [TRACE] vertex 'root.var.agility_userid': walking
2017/09/15 16:52:54 [TRACE] dag/walk: walking "provider.agility"
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility': evaluating
2017/09/15 16:52:54 [TRACE] [walkRefresh] Entering eval tree: provider.agility
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInitProvider
2017/09/15 16:52:54 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:52:54 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalGetProvider
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalOpFilter
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/09/15 16:52:54 [TRACE] [walkRefresh] Exiting eval tree: provider.agility
2017/09/15 16:52:54 [TRACE] dag/walk: walking "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': evaluating
2017/09/15 16:52:54 [TRACE] [walkRefresh] Entering eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalInterpolate
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCountCheckComputed
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalIf
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCountFixZeroOneBoundary
2017/09/15 16:52:54 [TRACE] [walkRefresh] Exiting eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': expanding/walking dynamic subgraph
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ResourceCountTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResourceInstance
2017/09/15 16:52:54 [TRACE] OrphanResourceCount: Starting...
2017/09/15 16:52:54 [TRACE] OrphanResourceCount: Checking: agility_compute.serv
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.OrphanResourceCountTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResourceInstance
2017/09/15 16:52:54 [DEBUG] Attaching resource state to "agility_compute.serv": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc4200790e0), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachStateTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResourceInstance
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TargetsTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResourceInstance
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "agility_compute.serv" references: []
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.ReferenceTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResourceInstance
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootTransformer:

agility_compute.serv - *terraform.NodeRefreshableManagedResourceInstance
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: walking "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': evaluating
2017/09/15 16:52:54 [TRACE] [walkRefresh] Entering eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalGetProvider
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalReadState
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalRefresh
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalWriteState
2017/09/15 16:52:54 [TRACE] [walkRefresh] Exiting eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] dag/walk: walking "provider.agility (close)"
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility (close)': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.provider.agility (close)': evaluating
2017/09/15 16:52:54 [TRACE] [walkRefresh] Entering eval tree: provider.agility (close)
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCloseProvider
2017/09/15 16:52:54 [TRACE] [walkRefresh] Exiting eval tree: provider.agility (close)
2017/09/15 16:52:54 [INFO] backend/local: apply calling Plan
2017/09/15 16:52:54 [INFO] terraform: building graph: GraphTypePlanDestroy
2017/09/15 16:52:54 [TRACE] StateTransformer: starting
2017/09/15 16:52:54 [TRACE] StateTransformer: Module: [root]
2017/09/15 16:52:54 [TRACE] StateTransformer: Resource "agility_compute.serv": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420079f90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.StateTransformer:

agility_compute.serv - *terraform.NodePlanDestroyableResource
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:52:54 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

agility_compute.serv - *terraform.NodePlanDestroyableResource
2017/09/15 16:52:54 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/15 16:52:54 [TRACE] DestroyEdgeTransformer: agility_compute.serv destroying "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:52:54 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:52:54 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:52:54 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:52:54 [DEBUG] Attaching resource state to "agility_compute.serv": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420079f90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:52:54 [DEBUG] Attaching resource state to "agility_compute.serv (destroy)": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420079f90), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:52:54 [TRACE] Attach provider request: []string{} agility
2017/09/15 16:52:54 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"agility", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc420312420)}
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "var.agility_password" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "agility_compute.serv" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "agility_compute.serv (destroy)" references: []
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "provider.agility" references: [var.agility_userid var.agility_password]
2017/09/15 16:52:54 [DEBUG] ReferenceTransformer: "var.agility_userid" references: []
2017/09/15 16:52:54 [TRACE] DestroyEdgeTransformer: reference graph: agility_compute.serv
  provider.agility
agility_compute.serv (destroy)
  provider.agility
provider.agility
  var.agility_password
  var.agility_userid
var.agility_password
var.agility_userid
2017/09/15 16:52:54 [TRACE] DestroyEdgeTransformer: creation node "agility_compute.serv" references [provider.agility var.agility_userid var.agility_password]
2017/09/15 16:52:54 [TRACE] DestroyEdgeTransformer: creation node "agility_compute.serv (destroy)" references [provider.agility var.agility_userid var.agility_password]
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

agility_compute.serv - *terraform.NodePlanDestroyableResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.TargetsTransformer:

agility_compute.serv - *terraform.NodePlanDestroyableResource
2017/09/15 16:52:54 [TRACE] Graph after step *terraform.RootTransformer:

agility_compute.serv - *terraform.NodePlanDestroyableResource
2017/09/15 16:52:54 [DEBUG] Starting graph walk: walkPlanDestroy
2017/09/15 16:52:54 [TRACE] dag/walk: added new vertex: "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] dag/walk: walking "agility_compute.serv"
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': walking
2017/09/15 16:52:54 [TRACE] vertex 'root.agility_compute.serv': evaluating
2017/09/15 16:52:54 [TRACE] [walkPlanDestroy] Entering eval tree: agility_compute.serv
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalReadState
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalDiffDestroy
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalCheckPreventDestroy
2017/09/15 16:52:54 [TRACE] root: eval: *terraform.EvalWriteDiff
2017/09/15 16:52:54 [TRACE] [walkPlanDestroy] Exiting eval tree: agility_compute.serv
2017/09/15 16:52:54 [DEBUG] command: asking for input: "Do you really want to destroy?"
2017/09/15 16:53:02 [INFO] terraform: building graph: GraphTypeApply
2017/09/15 16:53:02 [TRACE] DiffTransformer: starting
2017/09/15 16:53:02 [TRACE] DiffTransformer: Module: DESTROY: agility_compute.serv
2017/09/15 16:53:02 [TRACE] DiffTransformer: Resource "agility_compute.serv": *terraform.InstanceDiff{mu:sync.Mutex{state:0, sema:0x0}, Attributes:map[string]*terraform.ResourceAttrDiff(nil), Destroy:true, DestroyDeposed:false, DestroyTainted:false, Meta:map[string]interface {}(nil)}
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.DiffTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.OrphanOutputTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
2017/09/15 16:53:02 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/15 16:53:02 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:53:02 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.AttachResourceConfigTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
2017/09/15 16:53:02 [DEBUG] Attaching resource state to "agility_compute.serv (destroy)": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420410550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.AttachStateTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.MissingProviderTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
provider.agility - *terraform.NodeApplyableProvider
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.ProviderTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.DisableProviderTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.ParentProviderTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
2017/09/15 16:53:02 [TRACE] Attach provider request: []string{} agility
2017/09/15 16:53:02 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"agility", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc420312420)}
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.AttachProviderConfigTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
2017/09/15 16:53:02 [TRACE] DestroyEdgeTransformer: Beginning destroy edge transformation...
2017/09/15 16:53:02 [TRACE] DestroyEdgeTransformer: agility_compute.serv (destroy) destroying "agility_compute.serv"
2017/09/15 16:53:02 [TRACE] AttachResourceConfigTransformer: Beginning...
2017/09/15 16:53:02 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:53:02 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:53:02 [TRACE] AttachResourceConfigTransformer: Attach resource config request: agility_compute.serv
2017/09/15 16:53:02 [TRACE] Attaching resource config: &config.Resource{Mode:0, Name:"serv", Type:"agility_compute", RawCount:(*config.RawConfig)(0xc420312660), RawConfig:(*config.RawConfig)(0xc4203125a0), Provisioners:[]*config.Provisioner(nil), Provider:"", DependsOn:[]string(nil), Lifecycle:config.ResourceLifecycle{CreateBeforeDestroy:false, PreventDestroy:false, IgnoreChanges:[]string(nil)}}
2017/09/15 16:53:02 [DEBUG] Attaching resource state to "agility_compute.serv": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420410550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:53:02 [DEBUG] Attaching resource state to "agility_compute.serv (destroy)": &terraform.ResourceState{Type:"agility_compute", Dependencies:[]string{}, Primary:(*terraform.InstanceState)(0xc420410550), Deposed:[]*terraform.InstanceState{}, Provider:"", mu:sync.Mutex{state:0, sema:0x0}}
2017/09/15 16:53:02 [TRACE] Attach provider request: []string{} agility
2017/09/15 16:53:02 [TRACE] Attaching provider config: *config.ProviderConfig{Name:"agility", Alias:"", Version:"", RawConfig:(*config.RawConfig)(0xc420312420)}
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "var.agility_userid" references: []
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "var.agility_password" references: []
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "agility_compute.serv" references: []
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "agility_compute.serv (destroy)" references: []
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "provider.agility" references: [var.agility_userid var.agility_password]
2017/09/15 16:53:02 [TRACE] DestroyEdgeTransformer: reference graph: agility_compute.serv
  provider.agility
agility_compute.serv (destroy)
  provider.agility
provider.agility
  var.agility_password
  var.agility_userid
var.agility_password
var.agility_userid
2017/09/15 16:53:02 [TRACE] DestroyEdgeTransformer: creation node "agility_compute.serv" references [provider.agility var.agility_userid var.agility_password]
2017/09/15 16:53:02 [TRACE] DestroyEdgeTransformer: creation node "agility_compute.serv (destroy)" references [provider.agility var.agility_userid var.agility_password]
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.DestroyEdgeTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.ProvisionerTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.RootVariableTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.LocalTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.OutputTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.ModuleVariableTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "agility_compute.serv (destroy)" references: []
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "provider.agility" references: [var.agility_userid var.agility_password]
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "var.agility_userid" references: []
2017/09/15 16:53:02 [DEBUG] ReferenceTransformer: "var.agility_password" references: []
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.ReferenceTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.CountBoundaryTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.TargetsTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.CloseProviderTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.RootTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.agility (close) - *terraform.graphNodeCloseProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

agility_compute.serv (destroy) - *terraform.NodeDestroyResource
  provider.agility - *terraform.NodeApplyableProvider
meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
provider.agility - *terraform.NodeApplyableProvider
  var.agility_password - *terraform.NodeRootVariable
  var.agility_userid - *terraform.NodeRootVariable
provider.agility (close) - *terraform.graphNodeCloseProvider
  agility_compute.serv (destroy) - *terraform.NodeDestroyResource
root - terraform.graphNodeRoot
  meta.count-boundary (count boundary fixup) - *terraform.NodeCountBoundary
  provider.agility (close) - *terraform.graphNodeCloseProvider
var.agility_password - *terraform.NodeRootVariable
var.agility_userid - *terraform.NodeRootVariable
2017/09/15 16:53:02 [DEBUG] Starting graph walk: walkDestroy
2017/09/15 16:53:02 [TRACE] dag/walk: added new vertex: "provider.agility (close)"
2017/09/15 16:53:02 [TRACE] dag/walk: added new vertex: "root"
2017/09/15 16:53:02 [TRACE] dag/walk: added new vertex: "agility_compute.serv (destroy)"
2017/09/15 16:53:02 [TRACE] dag/walk: added new vertex: "provider.agility"
2017/09/15 16:53:02 [TRACE] dag/walk: added new vertex: "var.agility_userid"
2017/09/15 16:53:02 [TRACE] dag/walk: added new vertex: "var.agility_password"
2017/09/15 16:53:02 [TRACE] dag/walk: added new vertex: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:02 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:02 [TRACE] dag/walk: added edge: "agility_compute.serv (destroy)" waiting on "provider.agility"
2017/09/15 16:53:02 [TRACE] dag/walk: added edge: "meta.count-boundary (count boundary fixup)" waiting on "agility_compute.serv (destroy)"
2017/09/15 16:53:02 [TRACE] dag/walk: added edge: "root" waiting on "provider.agility (close)"
2017/09/15 16:53:02 [TRACE] dag/walk: added edge: "provider.agility" waiting on "var.agility_userid"
2017/09/15 16:53:02 [TRACE] dag/walk: added edge: "provider.agility" waiting on "var.agility_password"
2017/09/15 16:53:02 [TRACE] dag/walk: added edge: "provider.agility (close)" waiting on "agility_compute.serv (destroy)"
2017/09/15 16:53:02 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2017/09/15 16:53:02 [TRACE] dag/walk: dependencies changed for "agility_compute.serv (destroy)", sending new deps
2017/09/15 16:53:02 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (count boundary fixup)", sending new deps
2017/09/15 16:53:02 [TRACE] dag/walk: dependencies changed for "provider.agility", sending new deps
2017/09/15 16:53:02 [TRACE] dag/walk: dependencies changed for "provider.agility (close)", sending new deps
2017/09/15 16:53:02 [TRACE] dag/walk: walking "var.agility_userid"
2017/09/15 16:53:02 [TRACE] dag/walk: walking "var.agility_password"
2017/09/15 16:53:02 [TRACE] vertex 'root.var.agility_password': walking
2017/09/15 16:53:02 [TRACE] vertex 'root.var.agility_userid': walking
2017/09/15 16:53:02 [TRACE] dag/walk: walking "provider.agility"
2017/09/15 16:53:02 [TRACE] vertex 'root.provider.agility': walking
2017/09/15 16:53:02 [TRACE] vertex 'root.provider.agility': evaluating
2017/09/15 16:53:02 [TRACE] [walkDestroy] Entering eval tree: provider.agility
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalInitProvider
2017/09/15 16:53:02 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:53:02 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalOpFilter
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalGetProvider
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalInterpolate
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalBuildProviderConfig
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalSetProviderConfig
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalOpFilter
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalConfigProvider
2017/09/15 16:53:02 [TRACE] [walkDestroy] Exiting eval tree: provider.agility
2017/09/15 16:53:02 [TRACE] dag/walk: walking "agility_compute.serv (destroy)"
2017/09/15 16:53:02 [TRACE] vertex 'root.agility_compute.serv (destroy)': walking
2017/09/15 16:53:02 [TRACE] vertex 'root.agility_compute.serv (destroy)': evaluating
2017/09/15 16:53:02 [TRACE] [walkDestroy] Entering eval tree: agility_compute.serv (destroy)
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalOpFilter
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalSequence
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalReadDiff
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalFilterDiff
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalIf
2017/09/15 16:53:02 [TRACE] root: eval: terraform.EvalNoop
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalInstanceInfo
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalGetProvider
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalReadState
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalRequireState
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalApplyPre
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalIf
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalApplyProvisioners
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalIf
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalIf
2017/09/15 16:53:02 [TRACE] root: eval: *terraform.EvalApply
2017/09/15 16:53:02 [DEBUG] apply: agility_compute.serv: executing Apply
2017/09/15 16:53:07 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:07 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:07 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:12 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:12 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:12 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:17 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:17 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:17 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:22 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:22 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:22 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:27 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:27 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:27 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:32 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:32 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:32 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:37 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:37 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:37 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:42 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:42 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:42 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:47 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:47 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:47 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:52 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:52 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:52 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:57 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:53:57 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:53:57 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:02 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:02 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:02 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:07 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:07 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:07 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:12 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:12 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:12 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:17 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:17 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:17 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:22 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:22 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:22 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:27 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:27 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:27 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:32 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:32 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:32 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:37 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:37 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:37 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:42 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:42 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:42 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:47 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:47 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:47 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:52 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:52 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:52 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:57 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:54:57 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:54:57 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:02 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:02 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:02 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:07 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:07 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:07 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:12 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:12 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:12 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:17 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:17 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:17 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:22 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:22 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:22 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:27 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:27 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:27 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:32 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:32 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:32 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:37 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:37 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:37 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:42 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:42 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:42 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:47 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:47 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:47 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:52 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:52 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:52 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:57 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:55:57 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:55:57 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:02 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:02 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:02 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:07 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:07 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:07 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:12 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:12 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:12 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:17 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:17 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:17 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:22 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:22 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:22 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:27 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:27 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:27 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:32 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:32 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:32 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:37 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:37 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:37 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:42 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:42 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:42 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:47 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:47 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:47 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:52 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:52 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:52 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:56:57 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:57 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:56:57 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:02 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:02 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:02 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:07 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:07 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:07 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:12 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:12 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:12 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:17 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:17 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:17 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:22 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:22 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:22 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:27 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:27 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:27 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:32 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:32 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:32 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:37 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:37 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:37 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:42 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:42 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:42 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:57:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:57:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:58:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:58:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 16:59:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 16:59:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:00:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:00:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:01:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:01:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:02:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:02:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:03:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:03:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:04:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:04:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:05:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:05:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:06:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:06:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:58 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:07:58 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:07:58 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:03 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:03 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:03 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:08 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:08 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:08 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:13 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:13 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:13 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:18 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:18 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:18 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:23 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:23 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:23 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:28 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:28 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:28 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:33 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:33 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:33 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:38 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:38 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:38 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:43 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:43 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:43 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:48 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:48 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:48 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:53 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 17:08:53 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 17:08:53 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 18:02:55 [TRACE] dag/walk: vertex "meta.count-boundary (count boundary fixup)", waiting for: "agility_compute.serv (destroy)"
2017/09/15 18:02:55 [TRACE] dag/walk: vertex "root", waiting for: "meta.count-boundary (count boundary fixup)"
2017/09/15 18:02:55 [TRACE] dag/walk: vertex "provider.agility (close)", waiting for: "agility_compute.serv (destroy)"
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: panic: Get https://207.240.123.229/agility/api/v3.2/task/29033: dial tcp 207.240.123.229:443: connect: network is unreachable
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: goroutine 51 [running]:
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: github.com/csc/csc-agility-terraform-provider-plug-in/agility/api.GetTaskStatus(0xc4203940c0, 0x5, 0xc420256a36, 0x2, 0xc420256a20, 0xb, 0x0, 0x0, 0x0)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/usr/local/Cellar/go/1.9/libexec/src/github.com/csc/csc-agility-terraform-provider-plug-in/agility/api/agility_api.go:434 +0x6e2
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: github.com/csc/csc-agility-terraform-provider-plug-in/agility.GetTaskStatus(0xc420348e00, 0xc4203940c0, 0x5, 0xc4202c62e0, 0x0)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/usr/local/Cellar/go/1.9/libexec/src/github.com/csc/csc-agility-terraform-provider-plug-in/agility/resource_agility_compute.go:1188 +0xe14
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: github.com/csc/csc-agility-terraform-provider-plug-in/agility.resourceAgilityComputeDelete(0xc420348e00, 0x17df320, 0xc420255320, 0x0, 0x0)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/usr/local/Cellar/go/1.9/libexec/src/github.com/csc/csc-agility-terraform-provider-plug-in/agility/resource_agility_compute.go:836 +0x875
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: github.com/hashicorp/terraform/helper/schema.(*Resource).Apply(0xc420293320, 0xc42007b180, 0xc4203374a0, 0x17df320, 0xc420255320, 0x1, 0xc4203721b0, 0xc4203721b0)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/Users/mmumtaz/go/src/github.com/hashicorp/terraform/helper/schema/resource.go:166 +0x4b1
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: github.com/hashicorp/terraform/helper/schema.(*Provider).Apply(0xc4202e5030, 0xc42007b130, 0xc42007b180, 0xc4203374a0, 0x1f2c000, 0x0, 0x18)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/Users/mmumtaz/go/src/github.com/hashicorp/terraform/helper/schema/provider.go:259 +0xa4
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: github.com/hashicorp/terraform/plugin.(*ResourceProviderServer).Apply(0xc4202e72e0, 0xc420336de0, 0xc420352560, 0x0, 0x0)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/Users/mmumtaz/go/src/github.com/hashicorp/terraform/plugin/resource_provider.go:488 +0x57
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: reflect.Value.call(0xc420292420, 0xc4202503d0, 0x13, 0x1894e8b, 0x4, 0xc4202adf20, 0x3, 0x3, 0x20002, 0xc42002ef1c, ...)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/usr/local/Cellar/go/1.9/libexec/src/reflect/value.go:434 +0x906
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: reflect.Value.Call(0xc420292420, 0xc4202503d0, 0x13, 0xc42002ef20, 0x3, 0x3, 0x13e087f, 0x1, 0x0)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/usr/local/Cellar/go/1.9/libexec/src/reflect/value.go:302 +0xa4
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: net/rpc.(*service).call(0xc420259080, 0xc42024a4b0, 0xc4202568c0, 0xc42025a580, 0xc4202551e0, 0x1732d40, 0xc420336de0, 0x16, 0x1732d80, 0xc420352560, ...)
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/usr/local/Cellar/go/1.9/libexec/src/net/rpc/server.go:381 +0x142
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: created by net/rpc.(*Server).ServeCodec
2017-09-15T18:02:59.483+0530 [DEBUG] plugin.terraform-provider-agility: 	/usr/local/Cellar/go/1.9/libexec/src/net/rpc/server.go:475 +0x36b
2017/09/15 18:02:59 [TRACE] root: eval: *terraform.EvalWriteState
2017/09/15 18:02:59 [TRACE] root: eval: *terraform.EvalApplyPost
2017/09/15 18:02:59 [ERROR] root: eval: *terraform.EvalApplyPost, err: 1 error(s) occurred:

* agility_compute.serv: unexpected EOF
2017/09/15 18:02:59 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* agility_compute.serv: unexpected EOF
2017/09/15 18:02:59 [ERROR] root: eval: *terraform.EvalOpFilter, err: 1 error(s) occurred:

* agility_compute.serv: unexpected EOF
2017/09/15 18:02:59 [TRACE] [walkDestroy] Exiting eval tree: agility_compute.serv (destroy)
2017-09-15T18:02:59.486+0530 [DEBUG] plugin: plugin process exited: path=/usr/local/Cellar/go/1.9/libexec/src/github.com/csc/csc-agility-terraform-provider-plug-in/terraform-provider-agility
2017/09/15 18:02:59 [TRACE] dag/walk: upstream errored, not walking "meta.count-boundary (count boundary fixup)"
2017/09/15 18:02:59 [TRACE] dag/walk: upstream errored, not walking "provider.agility (close)"
2017/09/15 18:02:59 [TRACE] dag/walk: upstream errored, not walking "root"
2017/09/15 18:02:59 [TRACE] Preserving existing state lineage "e0f7333c-b0b3-4951-ad65-18f44faa6a00"
2017/09/15 18:02:59 [TRACE] Preserving existing state lineage "e0f7333c-b0b3-4951-ad65-18f44faa6a00"
2017/09/15 18:02:59 [TRACE] Preserving existing state lineage "e0f7333c-b0b3-4951-ad65-18f44faa6a00"
2017/09/15 18:02:59 [TRACE] Preserving existing state lineage "e0f7333c-b0b3-4951-ad65-18f44faa6a00"
2017/09/15 18:02:59 [DEBUG] plugin: waiting for all plugin processes to complete...
2017-09-15T18:02:59.487+0530 [WARN ] plugin: error closing client during Kill: err="connection is shut down"
